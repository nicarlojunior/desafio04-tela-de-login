{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Tela de login\\\\desafio04-tela-de-login\\\\src\\\\pages\\\\Login\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { Container, LoginContainer, Column, Spacing, Title } from \"./styles\";\nimport { defaultValues } from \"./types\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().email(\"E-mail inválido\").required(\"Campo obrigatório\"),\n  password: yup.string().min(6, \"No minimo 6 caracteres\").required(\"Campo obrigatório\")\n}).required();\nconst Login = () => {\n  _s();\n  var _errors$email, _errors$password;\n  const {\n    control,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: \"onBlur\",\n    defaultValues,\n    reValidateMode: \"onChange\"\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(LoginContainer, {\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"email\",\n          placeholder: \"Email\",\n          control: control,\n          errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Senha\",\n          control: control,\n          errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          title: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"hh0Gi1YY7FkRrbs5GKkFcP5/YO8=\", false, function () {\n  return [useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useForm","Button","Input","yupResolver","yup","Container","LoginContainer","Column","Spacing","Title","defaultValues","React","schema","object","email","string","required","password","min","Login","control","formState","errors","isValid","resolver","mode","reValidateMode","message"],"sources":["C:/Users/User/Documents/Tela de login/desafio04-tela-de-login/src/pages/Login/index.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport { Container, LoginContainer, Column, Spacing, Title } from \"./styles\";\nimport { defaultValues, IFormLogin } from \"./types\";\nimport React from \"react\";\n\nconst schema = yup\n  .object({\n    email: yup.string().email(\"E-mail inválido\").required(\"Campo obrigatório\"),\n    password: yup\n      .string()\n      .min(6, \"No minimo 6 caracteres\")\n      .required(\"Campo obrigatório\"),\n  })\n  .required();\n\nconst Login = () => {\n  const {\n    control,\n    formState: { errors, isValid },\n  } = useForm<IFormLogin>({\n    resolver: yupResolver(schema),\n    mode: \"onBlur\",\n    defaultValues,\n    reValidateMode: \"onChange\",\n  });\n\n  return (\n    <Container>\n      <LoginContainer>\n        <Column>\n          <Title>Login</Title>\n          <Spacing />\n          <Input\n            name=\"email\"\n            placeholder=\"Email\"\n            control={control}\n            errorMessage={errors?.email?.message}\n          />\n          <Spacing />\n          <Input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Senha\"\n            control={control}\n            errorMessage={errors?.password?.message}\n          />\n          <Spacing />\n          <Button title=\"Entrar\" />\n        </Column>\n      </LoginContainer>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,SAASC,WAAW,QAAQ,yBAAyB;AACrD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAE1B,SAASC,SAAS,EAAEC,cAAc,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,QAAQ,UAAU;AAC5E,SAASC,aAAa,QAAoB,SAAS;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,MAAM,GAAGR,GAAG,CACfS,MAAM,CAAC;EACNC,KAAK,EAAEV,GAAG,CAACW,MAAM,EAAE,CAACD,KAAK,CAAC,iBAAiB,CAAC,CAACE,QAAQ,CAAC,mBAAmB,CAAC;EAC1EC,QAAQ,EAAEb,GAAG,CACVW,MAAM,EAAE,CACRG,GAAG,CAAC,CAAC,EAAE,wBAAwB,CAAC,CAChCF,QAAQ,CAAC,mBAAmB;AACjC,CAAC,CAAC,CACDA,QAAQ,EAAE;AAEb,MAAMG,KAAK,GAAG,MAAM;EAAA;EAAA;EAClB,MAAM;IACJC,OAAO;IACPC,SAAS,EAAE;MAAEC,MAAM;MAAEC;IAAQ;EAC/B,CAAC,GAAGvB,OAAO,CAAa;IACtBwB,QAAQ,EAAErB,WAAW,CAACS,MAAM,CAAC;IAC7Ba,IAAI,EAAE,QAAQ;IACdf,aAAa;IACbgB,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,oBACE,QAAC,SAAS;IAAA,uBACR,QAAC,cAAc;MAAA,uBACb,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eACpB,QAAC,OAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eACX,QAAC,KAAK;UACJ,IAAI,EAAC,OAAO;UACZ,WAAW,EAAC,OAAO;UACnB,OAAO,EAAEN,OAAQ;UACjB,YAAY,EAAEE,MAAM,aAANA,MAAM,wCAANA,MAAM,CAAER,KAAK,kDAAb,cAAea;QAAQ;UAAA;UAAA;UAAA;QAAA,QACrC,eACF,QAAC,OAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eACX,QAAC,KAAK;UACJ,IAAI,EAAC,UAAU;UACf,IAAI,EAAC,UAAU;UACf,WAAW,EAAC,OAAO;UACnB,OAAO,EAAEP,OAAQ;UACjB,YAAY,EAAEE,MAAM,aAANA,MAAM,2CAANA,MAAM,CAAEL,QAAQ,qDAAhB,iBAAkBU;QAAQ;UAAA;UAAA;UAAA;QAAA,QACxC,eACF,QAAC,OAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eACX,QAAC,MAAM;UAAC,KAAK,EAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IAClB;MAAA;MAAA;MAAA;IAAA;EACM;IAAA;IAAA;IAAA;EAAA,QACP;AAEhB,CAAC;AAAC,GArCIR,KAAK;EAAA,QAILnB,OAAO;AAAA;AAAA,KAJPmB,KAAK;AAuCX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}